## Problem 4

Our goal in this problem is to explore H1b filings.  The dataset is fairly large, so let's limit the dataset to cities in a state(s) of your choosing.

Part a. Get a database of US cities and limit the list to only those in the state of our choice.  Make the list of cities ca. 100, so you may need to choose 2 states depending on which you choose.  To do this, we need a list of cities with state annotations.  Here is some R code to help:

```{r get_city_list, echo=T, eval=F, include=T}

    #we are grabbing a SQL set from here
    # http://www.farinspace.com/wp-content/uploads/us_cities_and_states.zip

    #download the files, looks like it is a .zip
    library(downloader)
    download("http://www.farinspace.com/wp-content/uploads/us_cities_and_states.zip",dest="us_cities_states.zip")
    unzip("us_cities_states.zip", exdir="./")
    
    #read in data, looks like sql dump, blah
    library(data.table)
    states <- fread(input = "./us_cities_and_states/states.sql",skip = 23,sep = "'", sep2 = ",", header = F, select = c(2,4))
    ### YOU do the CITIES
    ### I suggest the cities_extended.sql may have everything you need
    
```

Questions about this process:  Why do we like relational databases? Can you make a map containing annotations showing number of cities in the db by state?

Part b. Get the H1b filings modifying the following code to limit the number of cities to those chosen above.  Check out "?grepl" or "%in%".


```{r echo=T, eval=F, include=T}
    library(jsonlite)
    library(rvest)
    library(pbapply)
    library(data.table)
    
    json.cities<-paste0('http://h1bdata.info/cities.php?term=', letters)
    all.cities<-unlist(pblapply(json.cities,fromJSON))
    ##### filter cities here ...
    city.year<-expand.grid(city=all.cities,yr=seq(2014,2017))
    city.year$city<-urltools::url_encode(as.character(city.year$city))
    all.urls<-paste0('http://h1bdata.info/index.php?em=&job=&city=', city.year[,1],'&year=', city.year[,2])
    getData<-function(url.x){
        x<-read_html(url.x)
        x<-html_table(x)
        x<-data.table(x[[1]])
        return(x)
        Sys.sleep(5)
    }
    all.h1b<-pblapply(all.urls, getData)
    all.h1b<-rbindlist(all.h1b)
    saveRDS(all.h1b,'h1b_data.rds', row.names=F)
```

Part c. What is pblapply doing?  What arguments does it take?

Part d. What is the point of saveRDS?  What is the difference between saveRDS and save("object").

Part e. From here, this one is all on you.  Assume your purpose here is in researching cities you would like to concentrate your future job hunt.

Guiding questions (just suggestions):
1. What salary outlook is important to you?
2. What jobs do the salaries you are interested in go to?
3. What is the distribution of salaries?


Do a full on EDA.  Note that in MANY situations, interesting features suggesting bringing in additional data, if you feel it, do it. On ANY aspect of that dataset you think is interesting or would make a good plot.  Annotate and describe your process and thinking.  End with a figure you think best describes some aspect/anomaly/feature of the dataset.

There could be an opportunity to create a map.  You may even want an animation.


Quick and not so dirty map:

```{r eval=F, echo=T, include=T}
    #https://cran.r-project.org/web/packages/fiftystater/vignettes/fiftystater.html
    library(ggplot2)
    library(fiftystater)
    
    data("fifty_states") # this line is optional due to lazy data loading
    crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
    # map_id creates the aesthetic mapping to the state name column in your data
    p <- ggplot(crimes, aes(map_id = state)) + 
      # map points to the fifty_states shape data
      geom_map(aes(fill = Assault), map = fifty_states) + 
      expand_limits(x = fifty_states$long, y = fifty_states$lat) +
      coord_map() +
      scale_x_continuous(breaks = NULL) + 
      scale_y_continuous(breaks = NULL) +
      labs(x = "", y = "") +
      theme(legend.position = "bottom", 
            panel.background = element_blank())
    
    p
    ggsave(plot = p, file = "HW4_Problem6_Plot_Settlage.pdf")
```
